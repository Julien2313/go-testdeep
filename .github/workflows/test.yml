name: Go

on:
  push:
    paths:
      - '**.go'
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.9.x, 1.10.x, 1.11.x, 1.12.x, 1.13.x, 1.14.x]
        platform: [ubuntu-latest]
        full-tests: [false]
        include:
          - go-version: 1.15.x
            platform: ubuntu-latest
            full-tests: true

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Install go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment
        if: ${{ matrix.full-tests }}
        env:
          GO_TEST_SAFE_FLAGS:   "-covermode=atomic -coverprofile=coverage-safe.out"
          GO_TEST_UNSAFE_FLAGS: "-covermode=atomic -coverprofile=coverage-unsafe.out"

      - name: Linting
        if: ${{ matrix.full-tests }}
        run: |
          wget -O - -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh |
              sh -s -- -b $GOPATH/bin v1.30.0
          golangci-lint run -E gofmt -E golint -E maligned -E misspell -E prealloc -E unconvert -E whitespace -E goimports ./...

      - name: Testing
        run: |
          export GORACE="halt_on_error=1"
          go get -t ./...
          go test -race -tags safe $GO_TEST_SAFE_FLAGS ./...
          go test -race $GO_TEST_UNSAFE_FLAGS ./...

      - name: Reporting
        if: ${{ matrix.full-tests }}
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go get github.com/mattn/goveralls
          go get github.com/wadey/gocovmerge
          gocovmerge coverage-safe.out coverage-unsafe.out > coverage.out
          goveralls -coverprofile=coverage.out -service=github
